syntax = "proto3";

import "numproto/protobuf/ndarray.proto";

package xain.protobuf.coordinator;

service Coordinator {
  rpc Rendezvous(RendezvousRequest) returns (RendezvousReply) {}
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatReply) {}
  rpc StartTraining(StartTrainingRequest) returns (StartTrainingReply) {}
  rpc EndTraining(EndTrainingRequest) returns (EndTrainingReply) {}
}

enum RendezvousResponse {
  ACCEPT = 0;
  LATER = 1;
}

message RendezvousRequest {}

message RendezvousReply {
  RendezvousResponse response = 1;
}

message HeartbeatRequest {}

message HeartbeatReply {}

message StartTrainingRequest {}

message StartTrainingReply {
  repeated numproto.protobuf.NDArray theta = 1;
  int32 epochs = 2;
  int32 epoch_base = 3;
}

message EndTrainingRequest {
  ThetaUpdate theta_update = 1;
  map<string, HistoryValue> history = 2;
  Metrics metrics = 3;

  message ThetaUpdate {
    repeated numproto.protobuf.NDArray theta_prime = 1;
    int32 num_examples = 2;
  }

  /* protobuf doesn't like repeated as map values */
  message HistoryValue {
    repeated float values = 1;
  }

  message Metrics {
    int32 cid = 1;
    repeated int32 vol_by_class = 2;
  }
}

message EndTrainingReply {}
