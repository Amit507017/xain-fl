# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ClientMessage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    uuid = ... # type: typing___Text
    foo = ... # type: float
    bar = ... # type: float

    def __init__(self,
        *,
        uuid : typing___Optional[typing___Text] = None,
        foo : typing___Optional[float] = None,
        bar : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ClientMessage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"bar",u"foo",u"message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bar",u"foo",u"message",u"uuid"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"bar",b"bar",u"foo",b"foo",u"message",b"message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bar",b"bar",u"foo",b"foo",u"message",b"message",u"uuid",b"uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"message",b"message"]) -> typing_extensions___Literal["foo","bar"]: ...

class ServerMessage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class NestedMessage(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        foo = ... # type: int
        bar = ... # type: int

        def __init__(self,
            *,
            foo : typing___Optional[int] = None,
            bar : typing___Optional[int] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ServerMessage.NestedMessage: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"bar",u"foo"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"bar",b"bar",u"foo",b"foo"]) -> None: ...


    @property
    def bar(self) -> ServerMessage.NestedMessage: ...

    def __init__(self,
        *,
        bar : typing___Optional[ServerMessage.NestedMessage] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ServerMessage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"bar",u"for",u"message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bar",u"for",u"message"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"bar",b"bar",u"for",b"for",u"message",b"message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bar",b"bar",u"for",b"for",u"message",b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"message",b"message"]) -> typing_extensions___Literal["for","bar"]: ...
